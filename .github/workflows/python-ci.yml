name: Python CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    paths:
      - 'py/**'
      - 'proto/**'
      - '.github/workflows/python-ci.yml'

defaults:
  run:
    working-directory: py

jobs:
  ruff:
    name: Ruff Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff
        pip install -e ".[dev]"
    - name: Run Ruff
      run: |
        ruff check .

  mypy:
    name: Type Check (MyPy)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy types-protobuf
        pip install -e ".[dev]"
    - name: Run MyPy
      run: |
        mypy retrobus_perfetto --config-file mypy.ini

  unit-tests:
    name: Unit Tests (Python 3.12)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    - name: Generate protobuf files
      run: |
        python -m grpc_tools.protoc \
          --proto_path=../proto \
          --python_out=retrobus_perfetto/proto \
          ../proto/perfetto.proto
    - name: Run tests with coverage
      run: |
        pytest --cov=retrobus_perfetto --cov-report=xml --cov-report=term
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  example-test:
    name: Example Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    - name: Generate protobuf files
      run: |
        python -m grpc_tools.protoc \
          --proto_path=../proto \
          --python_out=retrobus_perfetto/proto \
          ../proto/perfetto.proto
    - name: Run example
      run: |
        python example.py
        # Verify the trace file was created
        test -f trace.perfetto-trace
    - name: Upload trace artifact
      uses: actions/upload-artifact@v4
      with:
        name: example-trace
        path: trace.perfetto-trace

  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -e ".[dev]"
    - name: Build package
      run: |
        python -m build
    - name: Check package
      run: |
        twine check dist/*
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  proto-compilation:
    name: Protobuf Compilation Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install grpcio-tools
    - name: Compile protobuf manually
      run: |
        python -m grpc_tools.protoc \
          --proto_path=../proto \
          --python_out=retrobus_perfetto/proto \
          ../proto/perfetto.proto
    - name: Verify generated file
      run: |
        test -f retrobus_perfetto/proto/perfetto_pb2.py
        python -c "import retrobus_perfetto.proto.perfetto_pb2"

  summary:
    name: Summary
    runs-on: ubuntu-latest
    if: always()
    needs: [ruff, mypy, unit-tests, example-test, build, proto-compilation]
    steps:
    - name: Check job statuses
      run: |
        if [[ "${{ needs.ruff.result }}" == "failure" || \
              "${{ needs.mypy.result }}" == "failure" || \
              "${{ needs.unit-tests.result }}" == "failure" || \
              "${{ needs.example-test.result }}" == "failure" || \
              "${{ needs.build.result }}" == "failure" || \
              "${{ needs.proto-compilation.result }}" == "failure" ]]; then
          echo "One or more jobs failed"
          exit 1
        else
          echo "All jobs passed successfully"
        fi
      working-directory: .